# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class Inputfeed(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, id: str=None, name: str=None, url: str=None, user: str=None, _pass: str=None):  # noqa: E501
        """Inputfeed - a model defined in Swagger

        :param id: The id of this Inputfeed.  # noqa: E501
        :type id: str
        :param name: The name of this Inputfeed.  # noqa: E501
        :type name: str
        :param url: The url of this Inputfeed.  # noqa: E501
        :type url: str
        :param user: The user of this Inputfeed.  # noqa: E501
        :type user: str
        :param _pass: The _pass of this Inputfeed.  # noqa: E501
        :type _pass: str
        """
        self.swagger_types = {
            'id': str,
            'name': str,
            'url': str,
            'user': str,
            '_pass': str
        }

        self.attribute_map = {
            'id': 'id',
            'name': 'name',
            'url': 'url',
            'user': 'user',
            '_pass': 'pass'
        }

        self._id = id
        self._name = name
        self._url = url
        self._user = user
        self.__pass = _pass

    @classmethod
    def from_dict(cls, dikt) -> 'Inputfeed':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Inputfeed of this Inputfeed.  # noqa: E501
        :rtype: Inputfeed
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self) -> str:
        """Gets the id of this Inputfeed.


        :return: The id of this Inputfeed.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id: str):
        """Sets the id of this Inputfeed.


        :param id: The id of this Inputfeed.
        :type id: str
        """

        self._id = id

    @property
    def name(self) -> str:
        """Gets the name of this Inputfeed.


        :return: The name of this Inputfeed.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name: str):
        """Sets the name of this Inputfeed.


        :param name: The name of this Inputfeed.
        :type name: str
        """

        self._name = name

    @property
    def url(self) -> str:
        """Gets the url of this Inputfeed.


        :return: The url of this Inputfeed.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url: str):
        """Sets the url of this Inputfeed.


        :param url: The url of this Inputfeed.
        :type url: str
        """

        self._url = url

    @property
    def user(self) -> str:
        """Gets the user of this Inputfeed.


        :return: The user of this Inputfeed.
        :rtype: str
        """
        return self._user

    @user.setter
    def user(self, user: str):
        """Sets the user of this Inputfeed.


        :param user: The user of this Inputfeed.
        :type user: str
        """

        self._user = user

    @property
    def _pass(self) -> str:
        """Gets the _pass of this Inputfeed.


        :return: The _pass of this Inputfeed.
        :rtype: str
        """
        return self.__pass

    @_pass.setter
    def _pass(self, _pass: str):
        """Sets the _pass of this Inputfeed.


        :param _pass: The _pass of this Inputfeed.
        :type _pass: str
        """

        self.__pass = _pass
